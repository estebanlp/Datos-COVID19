leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(color = ~pal_quantile(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(color = ~pal_quantile2(casos_quantile),color = 'white', weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(stroke = FALSE,color = ~pal_quantile2(casos_quantile),color = 'white', weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
pal_quantile2<-colorFactor("Reds",domain = comunas_rm$casos_quantile)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(stroke = FALSE,color = ~pal_quantile2(casos_quantile),color = 'white', weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`),color = 'white', weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed") %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed",color=~pal(`Casos Confirmados`)) %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
c(min(comunas_rm$`Casos Confirmados`,na.rm = T),5,20,50,100,max(comunas_rm$`Casos Confirmados`,na.rm = T))
breaks_fixed <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "fixed", fixedBreaks=c(min(comunas_rm$`Casos Confirmados`,na.rm = T),5,20,50,100,max(comunas_rm$`Casos Confirmados`,na.rm = T)))
comunas_rm$casos_fixed<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_fixed$brks)
p_fixed<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_fixed, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
# Equal interval
breaks_equal <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "equal")
comunas_rm$casos_equal<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_equal$brks)
p_equal<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_equal, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
p_equal
bins
pal <- colorBin("Reds", domain = comunas_rm$`Casos Confirmados`, bins = bins,right = T)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed",color=~pal(`Casos Confirmados`)) %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed",color=~pal(`Casos Confirmados`)) %>%
addLegend(pal = pal, values = ~`Casos Confirmados`, opacity = 1) %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed",color=~pal(`Casos Confirmados`)) %>%
addLegend(pal = pal, values = ~`Casos Confirmados`, opacity = 1,position = "bottomright") %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(comunas_rm) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(`Casos Confirmados`), weight = 2, fillOpacity = 0.7,group = "Fixed",color=~pal(`Casos Confirmados`)) %>%
addLegend(pal = pal, values = ~`Casos Confirmados`, opacity = 1,position = "bottomright",title = "Fixed",group = "Fixed") %>%
addPolygons(stroke = FALSE, color = ~pal_quantile2(casos_quantile), weight = 2, fillOpacity = 0.7,group = "Quantile") %>%
addLegend(pal = pal_quantile2, values = ~casos_quantile, opacity = 1,position = "bottomright",title = "Quantile",group = "Quantile") %>%
addLayersControl(
overlayGroups = c("Fixed", "Quantile"),
options = layersControlOptions(collapsed = FALSE)
)
### dynamic mapping
install.packages('tmap')
install.packages("tmap")
# EDSA - Exploratory Spatial Data Analysis
# Basado en Datos COVID19 CHILE
# Fuente: https://github.com/MinCiencia/Datos-COVID19
library(data.table)
library(ggplot2)
covid<-fread(input ="output/producto2/2020-04-08-CasosConfirmados.csv")
str(covid)
sapply(covid,FUN = class)
covid[,`Casos Confirmados`:=as.numeric(`Casos Confirmados`)]
ggplot(covid, aes(x=`Casos Confirmados`)) +geom_histogram(stat = 'count')
p_hist<-ggplot(covid, aes(x=`Casos Confirmados`)) +geom_histogram(stat = 'count')+ geom_density(stat = 'count')
# Choropleth maps
library(chilemapas)
help(package='chilemapas')
comunas_rm<-mapa_comunas[mapa_comunas$codigo_region==13,]
comunas_rm<-merge(comunas_rm,covid,by.x="codigo_comuna",by.y="Codigo comuna",all.x=TRUE,sort=F)
# Choropleth plot (continuos scale)
library(RColorBrewer)
paleta <- rev(brewer.pal(n = 5,name = "Reds"))
p_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = `Casos Confirmados`, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "No. Casos") +
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
# Choropleth plot (Discrete scale)
## Fixed
library(classInt)
help(package='classInt')
breaks_fixed <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "fixed", fixedBreaks=c(min(comunas_rm$`Casos Confirmados`,na.rm = T),5,20,50,100,max(comunas_rm$`Casos Confirmados`,na.rm = T)))
comunas_rm$casos_fixed<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_fixed$brks)
p_fixed<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_fixed, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
# Equal interval
breaks_equal <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "equal")
comunas_rm$casos_equal<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_equal$brks)
p_equal<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_equal, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
# Natural Breaks (Jenks)
breaks_jenks <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "jenks")
comunas_rm$casos_jenks<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_jenks$brks)
p_jenks<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_jenks, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
# Quantile (Equal share)
breaks_quantile <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "quantile")
comunas_rm$casos_quantile<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_quantile$brks)
p_quantile<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_quantile, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
# Standard Deviation
breaks_sd <- classIntervals(comunas_rm$`Casos Confirmados`, n = 5, style = "sd")
comunas_rm$casos_sd<-cut(comunas_rm$`Casos Confirmados`,breaks = breaks_sd$brks)
p_sd<-ggplot(comunas_rm) +
geom_sf(aes(fill = casos_sd, geometry = geometry)) +
scale_fill_brewer(palette = "Reds")+
labs(title = "Casos Confirmados", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
library(tmap)
### dynamic mapping
install.packages('tmap')
install.packages("tmap")
library(tmap)
### dynamic mapping
install.packages('tmap')
install.packages("tmap")
install.packages('sf')
install.packages('sf')
# Choropleth maps
library(sf)
### dynamic mapping
install.packages('tmap')
install.packages("tmap")
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
### looking at everything together
library(gridExtra)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
names(comunas_rm)
class(comunas_rm)
comunas_rm$r_i<-comunas_rm$`Casos Confirmados`/comunas_rm$Poblacion
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Tasa  de Riesgo") +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
library(ggplot2)
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Tasa  de Riesgo") +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
comunas_rm$AR<-sum(comunas_rm$`Casos Confirmados`)/sum(comunas_rm$Poblacion)
comunas_rm
comunas_rm$AR<-sum(comunas_rm$`Casos Confirmados`,na.rm = T)/sum(comunas_rm$Poblacion,na.rm = T)
comunas_rm
comunas_rm$E_i<-comunas_rm$Poblacion*comunas_rm$AR
comunas_rm
comunas_rm$R_i<-comunas_rm$`Casos Confirmados`/comunas_rm$E_i
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Tasa  de Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Tasa  de Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
brewer.pal.info
library(RColorBrewer)
brewer.pal.info
div_pal<-brewer.pal(name =  "RdBu",n = 5)
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(div_pal), name = "Tasa  de Riesgo") +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
summary(comunas_rm$r_i)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(div_pal), name = "Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colours = rev(div_pal), name = "Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
r_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient(colours = rev(div_pal), name = "Riesgo Relativo") +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colors = rev(div_pal), name = "Riesgo Relativo",) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
div_pal
?scale_fill_gradientn
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradientn(colors = rev(div_pal), name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(colors = rev(div_pal), name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2( name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
muted("blue")
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2( low = "blue", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
div_pal
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "#0571B0", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = muted("#0571B0"), mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1,) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = muted("blue"), mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1,) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "blue", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1,) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "blue", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "blues", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "Blue", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = "#0571B0", mid = "white",
high = "red",name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
div_pal[1]
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Riesgo Relativo",midpoint=1) +
labs(title = "Tasa de Riesgo Relativo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
R_cont
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo",midpoint=mean(comunas_rm$r_i)) +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
mean(comunas_rm$r_i)
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo",midpoint=mean(comunas_rm$r_i,na.rm = T)) +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
R_cont
grid.arrange(r_cont,R_cont)
grid.arrange(r_cont,R_cont)
grid.arrange(r_cont,R_cont,nrow=2)
grid.arrange(r_cont,R_cont,nrow=1)
grid.arrange(r_cont,R_cont,nrow=1)
mean(comunas_rm$r_i,na.rm = T)
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo") +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
grid.arrange(r_cont,R_cont,nrow=1)
grid.arrange(r_cont,R_cont,nrow=1)
View(r_cont)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
grid.arrange(p_cont,p_fixed,p_equal,p_jenks,p_quantile,p_sd)
p_cont
p_fixed
p_fixed
p_equal
p_quantile
p_jenks
r_cont
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo",midpoint=mean(comunas_rm$r_i,na.rm = T)) +
labs(title = "Tasa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
R_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = R_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Relativa",midpoint=1) +
labs(title = "Tasa Relativa de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
R_cont
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo",midpoint=mean(comunas_rm$r_i,na.rm = T)) +
labs(title = "Tasa Cruda de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
r_cont<-ggplot(comunas_rm) +
geom_sf(aes(fill = r_i, geometry = geometry)) +
scale_fill_gradient2(low = div_pal[5], mid = "white",
high = div_pal[1],name = "Tasa Riesgo") +
labs(title = "Tasa Cruda de Riesgo", subtitle = "Región Metropolitana - 2020-04-08") +
theme_minimal(base_size = 11)
r_cont
hist(comunas_rm$r_i)
hist(comunas_rm$r_i,main="Tasa Cruda de Riesgo")
hist(comunas_rm$R_i,main="Tasa Cruda de Riesgo")
hist(comunas_rm$R_i,main="Tasa Relativa de Riesgo")
hist(comunas_rm$E_i,main="Tasa Relativa de Riesgo")
hist(comunas_rm$R_i,main="Casos esperados")
hist(comunas_rm$`Casos Confirmados`,main="Casos esperados")
hist(comunas_rm$R_i,main="Casos esperados")
hist(comunas_rm$R_i,main="Tasa Cruda de Riesgo")
hist(comunas_rm$E_i,main="Casos Esperados")
hist(comunas_rm$`Casos Confirmados`,main="Casos Confirmados (Reportados)")
install.packages("circlize")
# devtools::install_github("mattflor/chorddiag") # paquete chordding no se puede instalar por medios normales
library(circlize)
library(chorddiag)
devtools::install_github("mattflor/chorddiag")
Tabla_19_19 <- data.table(readRDS(file = "../../Clases2/Ayud_03/Tabla_19_19.rds"),stringsAsFactors = F)
library(data.table)
Tabla_19_19 <- data.table(readRDS(file = "../../Clases2/Ayud_03/Tabla_19_19.rds"),stringsAsFactors = F)
BASE_OD_RM <- data.table(Tabla_19_19[ano_trimestre == params$year &
mes_central == params$month &
cae_general_red == "Ocupados" &
(b18_codigo %between% c(13000,13999) | ## nos quedamos con todos los que viven en la XIII región
r_p_c %between% c(13000,13999)),       ## o bien con aquellos que trabajan en la XIII región
.(Total = sum(round(V1))),
by = .(b18_codigo, r_p_c)])
Tabla_19_19[,.N,by=.(ano_trimestre,mes_central)]
BASE_OD_RM <- data.table(Tabla_19_19[ano_trimestre == 2020 &
mes_central == 1 &
cae_general_red == "Ocupados" &
(b18_codigo %between% c(13000,13999) | ## nos quedamos con todos los que viven en la RM
r_p_c %between% c(13000,13999)),       ## o bien con aquellos que trabajan en la RM
.(Total = sum(round(V1))),
by = .(b18_codigo, r_p_c)])
BASE_OD_RM[!b18_codigo %between% c(13000,13999), b18_codigo:="Saliendo de región"]
BASE_OD_RM[!r_p_c %between% c(13000,13999), r_p_c:="Entrando a región"]
MATRIZ_OD_RM <- with(BASE_OD_RM, tapply(Total, list(b18_codigo, r_p_c), FUN=sum))
MATRIZ_OD_RM[is.na(MATRIZ_OD_RM)] <- 0 # Cambiamos NAs de las matrices por 0s.
BASE_OD2_RM <- data.table(Tabla_19_19[ano_trimestre == 2020 &
mes_central == 1 &
cae_general_red == "Ocupados" &
(b18_codigo %between% c(13000,13999) | ## nos quedamos con todos los que viven en la XIII región
r_p_c %between% c(13000,13999)),       ## o bien con aquellos que trabajan en la XIII región
.(Total = sum(round(V1))),
by = .(b18_codigo, r_p_c,sectorO15)])
BASE_OD2_RM[!b18_codigo %between% c(13000,13999), b18_codigo:="Saliendo de región"]
BASE_OD2_RM[!r_p_c %between% c(13000,13999), r_p_c:="Entrando a región"]
# Creamos matriz de conmutación, donde las filas representan en qué comuna viven y las columna en que columna trabajan:
MATRICES_INDUSTRIAS_RM <- lapply(split(BASE_OD2_RM, BASE_OD2_RM$sectorO15), function(x) tapply(x$Total, list(x$b18_codigo, x$r_p_c), FUN=sum))
sectores <- unique(BASE_OD2_RM[sectorO15 != "",sectorO15])
for(i in 1:length(MATRICES_INDUSTRIAS_RM)){
eval(parse(text = paste0("MATRICES_INDUSTRIAS_RM$'",sectores[i],"'[is.na(MATRICES_INDUSTRIAS_RM$'",sectores[i],"')] <- 0")))
}
chordDiagram(MATRICES_INDUSTRIAS_RM$Comercio)
chorddiag(MATRICES_INDUSTRIAS_RM$Comercio, type = "bipartite")
library(chorddiag)
devtools::install_github("mattflor/chorddiag")
library(chorddiag)
chordDiagram(MATRICES_INDUSTRIAS_RM$Comercio)
chorddiag(MATRICES_INDUSTRIAS_RM$Comercio, type = "bipartite")
sum(colSums(MATRICES_INDUSTRIAS_RM$Comercio)) # Número de ocupados en comercio según matriz
Tabla_19_19[ano_trimestre == 2020 & mes_central == 1 & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio", .(Total = sum(round(V1))), by = .(sectorO15)] # Número de ocupados en comercio según colapso
Tabla_19_19[is.na(b18_codigo) & ano_trimestre == params$year & mes_central == params$month & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio",.(sum(V1)),  by = .(sectorO15)] # Número de NAs de personas que no responen la pregunta de a qué comuna van a trabajar supera diferencia entre ocupados según matriz y según colapso
Tabla_19_19[is.na(b18_codigo) & ano_trimestre == 2020 & mes_central == 1 & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio",.(sum(V1)),  by = .(sectorO15)] # Número de NAs de personas que no responen la pregunta de a qué comuna van a trabajar supera diferencia entre ocupados según matriz y según colapso
Tabla_19_19[is.na(r_p_c) & ano_trimestre == 2020 & mes_central == 1 & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio",.(sum(V1)),  by = .(sectorO15)] # La diferencia solo proviene de los que no contestan b18_codigo
colSums(MATRICES_INDUSTRIAS_RM$Comercio)["Entrando a región"]
sum(colSums(MATRICES_INDUSTRIAS_RM$Comercio)) # Número de ocupados en comercio según matriz
Tabla_19_19[ano_trimestre == 2020 & mes_central == 1 & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio", .(Total = sum(round(V1))), by = .(sectorO15)] # Número de ocupados en comercio según colapso
Tabla_19_19[is.na(b18_codigo) & ano_trimestre == 2020 & mes_central == 1 & cae_general_red == "Ocupados" & region == 13 & sectorO15 == "Comercio",.(sum(V1)),  by = .(sectorO15)] # Número de NAs de personas que no responen la pregunta de a qué comuna van a trabajar supera diferencia entre ocupados según matriz y según colapso
colSums(MATRICES_INDUSTRIAS_RM$Comercio)["Entrando a región"]
MATRICES_INDUSTRIAS_RM
class(MATRICES_INDUSTRIAS_RM)
names(MATRICES_INDUSTRIAS_RM)
MATRIZ_OD_RM
saveRDS(MATRIZ_OD_RM,file = "../../Clases2/Class_05/ConmutacionRM.rds")
